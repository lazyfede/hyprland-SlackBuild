#!/bin/bash

# hyprwayland-scanner SlackBuild script
# Script by: lazyfede <lazyfede@gmail.com>
# Version: 0.4.4
# Source: https://github.com/hyprland/hyprwayland-scanner

set -e  # Exit immediately if a command exits with a non-zero status

# Set working directory
cd "$(dirname "$0")"
CWD=$(pwd)

# Package information
PRGNAM=hyprwayland-scanner
VERSION=0.4.4
ARCH=${ARCH:-$(uname -m)}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
SOURCE="https://github.com/hyprwm/hyprwayland-scanner/archive/refs/tags/v${VERSION}.tar.gz"
SOURCE_DIR="${PRGNAM}-${VERSION}"
PKGNAME="${PRGNAM}-${VERSION}-${BUILD}${TAG}"
TMP=${TMP:-/tmp}
PKGTYPE=${PKGTYPE:-tgz}
PKG="$TMP/package-$PKGNAME"

# Determine architecture if not set
if [ "$ARCH" = "i386" ]; then
  ARCH=i586
elif [[ "$ARCH" == arm* ]]; then
  ARCH=arm
fi

# Dependencies
DEPENDS="cmake, wayland, wlroots"

# Create the package directory
mkdir -p "$PKG"

# Check if source is already present
if [ ! -f "${PRGNAM}-${VERSION}.tar.gz" ]; then
  # Ask for confirmation before downloading
  read -p "Source not found. Download from ${SOURCE}? (y/n) " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    # Download the source
    echo "Downloading ${SOURCE}..."
    wget -O "${PRGNAM}-${VERSION}.tar.gz" "$SOURCE" || { echo "Download failed"; exit 1; }
  else
    echo "Download cancelled. Exiting..."
    exit 1
  fi
else
  echo "Source already present, skipping download..."
fi

# Extract the source
tar -xzf "${PRGNAM}-${VERSION}.tar.gz"
cd "$SOURCE_DIR"

# Set permissions
chown -R root:root .
find . -type f -exec chmod 644 {} \;  # Set files to 644
find . -type d -exec chmod 755 {} \;  # Set directories to 755

# Build the package
cmake -DCMAKE_INSTALL_PREFIX=/usr -B build
cmake --build build -j "$(nproc)"

# Install the package
cmake --build build --target install DESTDIR="$PKG"

# Clean up
cd ..
rm -rf "$SOURCE_DIR"
rm -f "${PRGNAM}-${VERSION}.tar.gz"

# Create the Slackware package
cd "$PKG"
mkdir -pv install
cat "$CWD/slack-desc" > install/slack-desc
/sbin/makepkg -l y -c n "$TMP/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"

echo "Package created: ${PKGNAME}.${PKGTYPE}"
